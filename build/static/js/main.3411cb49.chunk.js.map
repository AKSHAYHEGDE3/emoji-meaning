{"version":3,"sources":["emojis.js","App.js","reportWebVitals.js","index.js"],"names":["emojiDictionary","App","emojis","Object","keys","useState","setEmoji","name","setName","className","style","type","onChange","e","input","target","value","placeholder","map","emoji","onClick","fontSize","padding","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAaA,EACb,CACA,eAAK,QACL,eAAK,QACL,eAAK,OACL,eAAK,QACL,eAAK,MACL,eAAK,QACL,eAAK,OACL,eAAK,QACL,eAAK,OACL,eAAK,Q,eCyDUC,MA1Df,WAEA,IAAMC,EAAOC,OAAOC,KAAKJ,GACzB,EAAsBK,mBAAS,IAA/B,mBAAYC,GAAZ,WACA,EAAoBD,mBAAS,cAA7B,mBAAME,EAAN,KAAWC,EAAX,KAgBE,OAGE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAO,CAAC,UAAY,QAAxB,8BACA,uBAAQC,KAAK,OAAOC,SAnB1B,SAAuBC,GACrB,IAAMC,EAAMD,EAAEE,OAAOC,MACrBV,EAASQ,GAEPN,EADCM,KAASd,EACFA,EAAgBc,GAEhB,oBAauCG,YAAa,sBAC1DP,MAAO,CACC,UAAY,OACZ,MAAQ,MACR,OAAS,UAGb,oBAAIA,MAAO,CAET,gBAAkB,QAClB,OAAS,kBACT,MAAQ,MACR,UAAY,MACZ,OAAS,OACT,UAAY,OACZ,aAAe,QARjB,4BAUaH,KAKdL,EAAOgB,KAAI,SAACC,GAAD,OACV,sBAAMC,QAAS,WA/BvBZ,EAAQR,EA+BkCmB,KAAQT,MAAO,CAAEW,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAAhG,SACGJ,WC/CEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3411cb49.chunk.js","sourcesContent":["export const emojiDictionary=\r\n{\r\n'ü§£':'laugh',\r\n'ü•≥':'party',\r\n'üòé':'cool',\r\n'üòä':'smile',\r\n'üò≠':'cry',\r\n'üò§':'anger',\r\n'ü•∂':'fear',\r\n'ü§ë':'money',\r\n'üòç':'love',\r\n'ü§í':'sick'\r\n}","import { emojiDictionary } from \"./emojis\";\nimport React, { useState } from \"react\";\nimport './App.css';\n\n\n\n\n\n\n\nfunction App() {\n\nconst emojis=Object.keys(emojiDictionary)\nconst[emoji,setEmoji]=useState(\"\")\nconst[name,setName]=useState(\"emoji name\")\n\nfunction changeHandler(e){\n  const input=e.target.value;\n  setEmoji(input)\n  if(input in emojiDictionary){\n    setName(emojiDictionary[input])\n  } else {\n    setName('emoji not found')\n  }\n}\n\nfunction clickHandler(input) {\n  setName(emojiDictionary[input]);\n}\n\n  return (\n\n\n    <div className=\"App\">\n      <h1 style={{'marginTop':'3rem'}}>Emoji Dictionary</h1>\n      <input  type=\"text\" onChange={changeHandler} placeholder={\"put your emoji here\"} \n      style={{\n              'marginTop':'3rem',\n              'width':'60%',\n              'height':'50px'\n       }} />\n      \n          <h2 style={{\n            \n            'backgroundColor':'white',\n            'border':'1px solid black',\n            'width':\"40%\",\n            'maxHeight':'30%',\n            'margin':'auto',\n            'marginTop':'3rem',\n            'marginBottom':'3rem',\n        }}>\n          {`Meaning: ${name}`}\n          </h2>\n\n\n      {\n         emojis.map((emoji) => (\n          <span onClick={() => clickHandler(emoji)} style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}>\n            {emoji}\n          </span>\n        ))\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}